name: Build and Push to ECR

on:  
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: franchise-app

jobs:
  build-and-push:
  
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

    - name: Give execute permission to gradlew
      run: chmod +x ./gradlew

    - name: Build with verify(build + jacoco coverage)
      run: ./gradlew build

    - name: Build Docker image
      run: |
        IMAGE_TAG=$(date +%s)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Tag and push image to ECR
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $IMAGE_URI
        docker push $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    - name: Output image URI
      run: echo "Pushed image to $IMAGE_URI"
